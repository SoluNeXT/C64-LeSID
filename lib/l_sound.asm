#importonce

#import "../main.asm"
#import "../def/d_sound.asm"

* = * "L_SOUND"

.namespace SOUND{

	RESET:{
			ldx #0
			lda #0
		!:
			sta SOUND.VOICE1,x
			inx
			cpx #32
			bne !-
			rts
	}

	//A = volume
	SET_VOLUME:{
		sta SOUND.VOLUMEANDFILTERMODES
		rts
	}

	// A contient la waveform
	// X contient ATTACK / DECAY
	// Y contient SUSTAIN / RELEASE
	SET_VOICE1:{
		stx SOUND.VOICE1 + SOUND.ATTACKDECAY
		sty SOUND.VOICE1 + SOUND.SUSTAINRELEASE

		sta SOUND.VOICE1 + SOUND.CONTROLREG
		sta SOUND.MEM_WAVEFORM_VOICE1
		rts
	}

	SET_VOICE2:{
		stx SOUND.VOICE2 + SOUND.ATTACKDECAY
		sty SOUND.VOICE2 + SOUND.SUSTAINRELEASE

		sta SOUND.VOICE2 + SOUND.CONTROLREG
		sta SOUND.MEM_WAVEFORM_VOICE2
		rts
	}

	SET_VOICE3:{
		stx SOUND.VOICE3 + SOUND.ATTACKDECAY
		sty SOUND.VOICE3 + SOUND.SUSTAINRELEASE

		sta SOUND.VOICE3 + SOUND.CONTROLREG
		sta SOUND.MEM_WAVEFORM_VOICE3
		rts
	}	

	//X et Y ... X la fréquence Lo et Y la fréquence Hi
	PLAYNOTE_VOICE1:{
		lda SOUND.MEM_WAVEFORM_VOICE1
		and #%11111110
		sta SOUND.VOICE1 + SOUND.CONTROLREG
		sty SOUND.VOICE1 + SOUND.FREQUENCEHI
		stx SOUND.VOICE1 + SOUND.FREQUENCELO
		ora #%00000001
		sta SOUND.VOICE1 + SOUND.CONTROLREG
		rts
	}

	PLAYNOTE_VOICE2:{
		lda SOUND.MEM_WAVEFORM_VOICE2
		and #%11111110
		sta SOUND.VOICE2 + SOUND.CONTROLREG
		sty SOUND.VOICE2 + SOUND.FREQUENCEHI
		stx SOUND.VOICE2 + SOUND.FREQUENCELO
		ora #%00000001
		sta SOUND.VOICE2 + SOUND.CONTROLREG
		rts
	}

	PLAYNOTE_VOICE3:{
		lda SOUND.MEM_WAVEFORM_VOICE3
		and #%11111110
		sta SOUND.VOICE3 + SOUND.CONTROLREG
		sty SOUND.VOICE3 + SOUND.FREQUENCEHI
		stx SOUND.VOICE3 + SOUND.FREQUENCELO
		ora #%00000001
		sta SOUND.VOICE3 + SOUND.CONTROLREG
		rts
	}	
	
}